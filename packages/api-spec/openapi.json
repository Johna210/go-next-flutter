{
	"components": {
		"schemas": {
			"CreateUserRequestBody": {
				"additionalProperties": false,
				"properties": {
					"$schema": {
						"description": "A URL to the JSON Schema for this object.",
						"examples": [
							"http://localhost:8080/schemas/CreateUserRequestBody.json"
						],
						"format": "uri",
						"readOnly": true,
						"type": "string"
					},
					"email": {
						"description": "User email address",
						"examples": ["user@example.com"],
						"format": "email",
						"type": "string"
					},
					"name": {
						"description": "User full name",
						"examples": ["John Doe"],
						"maxLength": 100,
						"minLength": 1,
						"type": "string"
					}
				},
				"required": ["email", "name"],
				"type": "object"
			},
			"ErrorDetail": {
				"additionalProperties": false,
				"properties": {
					"location": {
						"description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
						"type": "string"
					},
					"message": {
						"description": "Error message text",
						"type": "string"
					},
					"value": {
						"description": "The value at the given location"
					}
				},
				"type": "object"
			},
			"ErrorModel": {
				"additionalProperties": false,
				"properties": {
					"$schema": {
						"description": "A URL to the JSON Schema for this object.",
						"examples": ["http://localhost:8080/schemas/ErrorModel.json"],
						"format": "uri",
						"readOnly": true,
						"type": "string"
					},
					"detail": {
						"description": "A human-readable explanation specific to this occurrence of the problem.",
						"examples": ["Property foo is required but is missing."],
						"type": "string"
					},
					"errors": {
						"description": "Optional list of individual error details",
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": ["array", "null"]
					},
					"instance": {
						"description": "A URI reference that identifies the specific occurrence of the problem.",
						"examples": ["https://example.com/error-log/abc123"],
						"format": "uri",
						"type": "string"
					},
					"status": {
						"description": "HTTP status code",
						"examples": [400],
						"format": "int64",
						"type": "integer"
					},
					"title": {
						"description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error.",
						"examples": ["Bad Request"],
						"type": "string"
					},
					"type": {
						"default": "about:blank",
						"description": "A URI reference to human-readable documentation for the error.",
						"examples": ["https://example.com/errors/example"],
						"format": "uri",
						"type": "string"
					}
				},
				"type": "object"
			},
			"ListUsersResponseBody": {
				"additionalProperties": false,
				"properties": {
					"$schema": {
						"description": "A URL to the JSON Schema for this object.",
						"examples": [
							"http://localhost:8080/schemas/ListUsersResponseBody.json"
						],
						"format": "uri",
						"readOnly": true,
						"type": "string"
					},
					"limit": {
						"description": "Limit used",
						"format": "int64",
						"type": "integer"
					},
					"offset": {
						"description": "Offset used",
						"format": "int64",
						"type": "integer"
					},
					"total": {
						"description": "Total number of users",
						"format": "int64",
						"type": "integer"
					},
					"users": {
						"description": "List of users",
						"items": {
							"$ref": "#/components/schemas/UserData"
						},
						"type": ["array", "null"]
					}
				},
				"required": ["users", "total", "limit", "offset"],
				"type": "object"
			},
			"MessageResponseBody": {
				"additionalProperties": false,
				"properties": {
					"$schema": {
						"description": "A URL to the JSON Schema for this object.",
						"examples": [
							"http://localhost:8080/schemas/MessageResponseBody.json"
						],
						"format": "uri",
						"readOnly": true,
						"type": "string"
					},
					"message": {
						"description": "Response message",
						"type": "string"
					}
				},
				"required": ["message"],
				"type": "object"
			},
			"UpdateUserRequestBody": {
				"additionalProperties": false,
				"properties": {
					"$schema": {
						"description": "A URL to the JSON Schema for this object.",
						"examples": [
							"http://localhost:8080/schemas/UpdateUserRequestBody.json"
						],
						"format": "uri",
						"readOnly": true,
						"type": "string"
					},
					"name": {
						"description": "User full name",
						"examples": ["John Doe"],
						"maxLength": 100,
						"minLength": 1,
						"type": "string"
					}
				},
				"required": ["name"],
				"type": "object"
			},
			"UserData": {
				"additionalProperties": false,
				"properties": {
					"created_at": {
						"format": "date-time",
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"updated_at": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": ["id", "email", "name", "created_at", "updated_at"],
				"type": "object"
			},
			"UserResponseBody": {
				"additionalProperties": false,
				"properties": {
					"$schema": {
						"description": "A URL to the JSON Schema for this object.",
						"examples": ["http://localhost:8080/schemas/UserResponseBody.json"],
						"format": "uri",
						"readOnly": true,
						"type": "string"
					},
					"created_at": {
						"description": "Creation timestamp",
						"format": "date-time",
						"type": "string"
					},
					"email": {
						"description": "User email",
						"examples": ["user@example.com"],
						"type": "string"
					},
					"id": {
						"description": "User ID",
						"examples": ["123e4567-e89b-12d3-a456-426614174000"],
						"type": "string"
					},
					"name": {
						"description": "User name",
						"examples": ["John Doe"],
						"type": "string"
					},
					"updated_at": {
						"description": "Last update timestamp",
						"format": "date-time",
						"type": "string"
					}
				},
				"required": ["id", "email", "name", "created_at", "updated_at"],
				"type": "object"
			}
		}
	},
	"info": {
		"contact": {
			"email": "test@test.com",
			"name": "test"
		},
		"description": "A clean architecture REST API for user management with OpenAPI 3.1 documentation",
		"title": "Simple User API",
		"version": "1.0.0"
	},
	"openapi": "3.1.0",
	"paths": {
		"/api/v1/users": {
			"get": {
				"description": "Retrieves a paginated list of users",
				"operationId": "list-users",
				"parameters": [
					{
						"description": "Number of users to return",
						"explode": false,
						"in": "query",
						"name": "limit",
						"schema": {
							"default": 10,
							"description": "Number of users to return",
							"format": "int64",
							"maximum": 100,
							"minimum": 1,
							"type": "integer"
						}
					},
					{
						"description": "Number of users to skip",
						"explode": false,
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"description": "Number of users to skip",
							"format": "int64",
							"minimum": 0,
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ListUsersResponseBody"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorModel"
								}
							}
						},
						"description": "Error"
					}
				},
				"summary": "List users",
				"tags": ["Users"]
			},
			"post": {
				"description": "Creates a new user account with the provided email and name",
				"operationId": "create-user",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserRequestBody"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseBody"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorModel"
								}
							}
						},
						"description": "Error"
					}
				},
				"summary": "Create a new user",
				"tags": ["Users"]
			}
		},
		"/api/v1/users/{id}": {
			"delete": {
				"description": "Deletes a user by their ID",
				"operationId": "delete-user",
				"parameters": [
					{
						"description": "User unique identifier",
						"example": "550e8400-e29b-41d4-a716-446655440000",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"description": "User unique identifier",
							"examples": ["550e8400-e29b-41d4-a716-446655440000"],
							"format": "uuid",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MessageResponseBody"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorModel"
								}
							}
						},
						"description": "Error"
					}
				},
				"summary": "Delete user",
				"tags": ["Users"]
			},
			"get": {
				"description": "Retrieves a user by their unique identifier",
				"operationId": "get-user",
				"parameters": [
					{
						"description": "User unique identifier",
						"example": "550e8400-e29b-41d4-a716-446655440000",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"description": "User unique identifier",
							"examples": ["550e8400-e29b-41d4-a716-446655440000"],
							"format": "uuid",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseBody"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorModel"
								}
							}
						},
						"description": "Error"
					}
				},
				"summary": "Get user by ID",
				"tags": ["Users"]
			},
			"put": {
				"description": "Updates user information",
				"operationId": "update-user",
				"parameters": [
					{
						"description": "User unique identifier",
						"example": "550e8400-e29b-41d4-a716-446655440000",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"description": "User unique identifier",
							"examples": ["550e8400-e29b-41d4-a716-446655440000"],
							"format": "uuid",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserRequestBody"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseBody"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorModel"
								}
							}
						},
						"description": "Error"
					}
				},
				"summary": "Update user",
				"tags": ["Users"]
			}
		}
	},
	"servers": [
		{
			"description": "Local development server",
			"url": "http://localhost:8080"
		}
	]
}
