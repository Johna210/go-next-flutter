/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/api/v1/users": {
		/**
		 * List users
		 * @description Retrieves a paginated list of users
		 */
		get: operations["list-users"];
		/**
		 * Create a new user
		 * @description Creates a new user account with the provided email and name
		 */
		post: operations["create-user"];
	};
	"/api/v1/users/{id}": {
		/**
		 * Get user by ID
		 * @description Retrieves a user by their unique identifier
		 */
		get: operations["get-user"];
		/**
		 * Update user
		 * @description Updates user information
		 */
		put: operations["update-user"];
		/**
		 * Delete user
		 * @description Deletes a user by their ID
		 */
		delete: operations["delete-user"];
	};
}

export type webhooks = Record<string, never>;

export interface components {
	schemas: {
		CreateUserRequestBody: {
			/**
			 * Format: uri
			 * @description A URL to the JSON Schema for this object.
			 */
			$schema?: string;
			/**
			 * Format: email
			 * @description User email address
			 */
			email: string;
			/** @description User full name */
			name: string;
		};
		ErrorDetail: {
			/** @description Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id' */
			location?: string;
			/** @description Error message text */
			message?: string;
			/** @description The value at the given location */
			value?: unknown;
		};
		ErrorModel: {
			/**
			 * Format: uri
			 * @description A URL to the JSON Schema for this object.
			 */
			$schema?: string;
			/** @description A human-readable explanation specific to this occurrence of the problem. */
			detail?: string;
			/** @description Optional list of individual error details */
			errors?: components["schemas"]["ErrorDetail"][] | null;
			/**
			 * Format: uri
			 * @description A URI reference that identifies the specific occurrence of the problem.
			 */
			instance?: string;
			/**
			 * Format: int64
			 * @description HTTP status code
			 */
			status?: number;
			/** @description A short, human-readable summary of the problem type. This value should not change between occurrences of the error. */
			title?: string;
			/**
			 * Format: uri
			 * @description A URI reference to human-readable documentation for the error.
			 * @default about:blank
			 */
			type?: string;
		};
		ListUsersResponseBody: {
			/**
			 * Format: uri
			 * @description A URL to the JSON Schema for this object.
			 */
			$schema?: string;
			/**
			 * Format: int64
			 * @description Limit used
			 */
			limit: number;
			/**
			 * Format: int64
			 * @description Offset used
			 */
			offset: number;
			/**
			 * Format: int64
			 * @description Total number of users
			 */
			total: number;
			/** @description List of users */
			users: components["schemas"]["UserData"][] | null;
		};
		MessageResponseBody: {
			/**
			 * Format: uri
			 * @description A URL to the JSON Schema for this object.
			 */
			$schema?: string;
			/** @description Response message */
			message: string;
		};
		UpdateUserRequestBody: {
			/**
			 * Format: uri
			 * @description A URL to the JSON Schema for this object.
			 */
			$schema?: string;
			/** @description User full name */
			name: string;
		};
		UserData: {
			/** Format: date-time */
			created_at: string;
			email: string;
			id: string;
			name: string;
			/** Format: date-time */
			updated_at: string;
		};
		UserResponseBody: {
			/**
			 * Format: uri
			 * @description A URL to the JSON Schema for this object.
			 */
			$schema?: string;
			/**
			 * Format: date-time
			 * @description Creation timestamp
			 */
			created_at: string;
			/** @description User email */
			email: string;
			/** @description User ID */
			id: string;
			/** @description User name */
			name: string;
			/**
			 * Format: date-time
			 * @description Last update timestamp
			 */
			updated_at: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
	/**
	 * List users
	 * @description Retrieves a paginated list of users
	 */
	"list-users": {
		parameters: {
			query?: {
				/** @description Number of users to return */
				limit?: number;
				/** @description Number of users to skip */
				offset?: number;
			};
		};
		responses: {
			/** @description OK */
			200: {
				content: {
					"application/json": components["schemas"]["ListUsersResponseBody"];
				};
			};
			/** @description Error */
			default: {
				content: {
					"application/problem+json": components["schemas"]["ErrorModel"];
				};
			};
		};
	};
	/**
	 * Create a new user
	 * @description Creates a new user account with the provided email and name
	 */
	"create-user": {
		requestBody: {
			content: {
				"application/json": components["schemas"]["CreateUserRequestBody"];
			};
		};
		responses: {
			/** @description OK */
			200: {
				content: {
					"application/json": components["schemas"]["UserResponseBody"];
				};
			};
			/** @description Error */
			default: {
				content: {
					"application/problem+json": components["schemas"]["ErrorModel"];
				};
			};
		};
	};
	/**
	 * Get user by ID
	 * @description Retrieves a user by their unique identifier
	 */
	"get-user": {
		parameters: {
			path: {
				/**
				 * @description User unique identifier
				 * @example 550e8400-e29b-41d4-a716-446655440000
				 */
				id: string;
			};
		};
		responses: {
			/** @description OK */
			200: {
				content: {
					"application/json": components["schemas"]["UserResponseBody"];
				};
			};
			/** @description Error */
			default: {
				content: {
					"application/problem+json": components["schemas"]["ErrorModel"];
				};
			};
		};
	};
	/**
	 * Update user
	 * @description Updates user information
	 */
	"update-user": {
		parameters: {
			path: {
				/**
				 * @description User unique identifier
				 * @example 550e8400-e29b-41d4-a716-446655440000
				 */
				id: string;
			};
		};
		requestBody: {
			content: {
				"application/json": components["schemas"]["UpdateUserRequestBody"];
			};
		};
		responses: {
			/** @description OK */
			200: {
				content: {
					"application/json": components["schemas"]["UserResponseBody"];
				};
			};
			/** @description Error */
			default: {
				content: {
					"application/problem+json": components["schemas"]["ErrorModel"];
				};
			};
		};
	};
	/**
	 * Delete user
	 * @description Deletes a user by their ID
	 */
	"delete-user": {
		parameters: {
			path: {
				/**
				 * @description User unique identifier
				 * @example 550e8400-e29b-41d4-a716-446655440000
				 */
				id: string;
			};
		};
		responses: {
			/** @description OK */
			200: {
				content: {
					"application/json": components["schemas"]["MessageResponseBody"];
				};
			};
			/** @description Error */
			default: {
				content: {
					"application/problem+json": components["schemas"]["ErrorModel"];
				};
			};
		};
	};
}
